{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  data() {\n    return {\n      tableData: [],\n      filter: {\n        name: '',\n        emotionType: ''\n      },\n      pagination: {\n        currentPage: 1,\n        pageSize: 5,\n        totalItems: 0\n      }\n    };\n  },\n  methods: {\n    getData() {\n      let url = 'http://192.168.237.26:5001/api/statistic/emotions';\n      const params = new URLSearchParams();\n\n      // Adding filters\n      if (this.filter.name) params.append('name', this.filter.name);\n      if (this.filter.emotionType) params.append('emotionType', this.filter.emotionType);\n\n      // Adding pagination parameters\n      params.append('page', this.pagination.currentPage);\n      params.append('pageSize', this.pagination.pageSize);\n      url += `?${params.toString()}`;\n      this.$axios.get(url).then(res => {\n        if (res.data.code === 0 && res.data.data) {\n          this.tableData = res.data.data.items;\n          this.pagination.totalItems = res.data.data.total; // Adjust according to your API response\n        } else {\n          this.$message.error(res.data.message || 'Failed to fetch data');\n        }\n      }).catch(error => {\n        console.error(\"Error fetching data: \", error);\n        this.$message.error(\"服务器错误，请稍后再试！\");\n      });\n    },\n    handleSizeChange(newSize) {\n      this.pagination.pageSize = newSize;\n      this.getData();\n    },\n    handleCurrentChange(newPage) {\n      this.pagination.currentPage = newPage;\n      this.getData();\n    }\n  },\n  mounted() {\n    this.getData(); // Initial data fetch when the component is mounted\n  }\n};","map":{"version":3,"names":["data","tableData","filter","name","emotionType","pagination","currentPage","pageSize","totalItems","methods","getData","url","params","URLSearchParams","append","toString","$axios","get","then","res","code","items","total","$message","error","message","catch","console","handleSizeChange","newSize","handleCurrentChange","newPage","mounted"],"sources":["src/views/page/record/emotion.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"filter-section\">\r\n      <el-input v-model=\"filter.name\" placeholder=\"输入姓名搜索\"></el-input>\r\n      <el-select v-model=\"filter.emotionType\" placeholder=\"选择情绪类型\">\r\n        <el-option label=\"Happy\" value=\"happy\"></el-option>\r\n        <el-option label=\"Sad\" value=\"sad\"></el-option>\r\n      </el-select>\r\n      <el-button type=\"primary\" @click=\"getData\">搜索</el-button>\r\n    </div>\r\n    <el-table :data=\"tableData\" border style=\"width: 100%\">\r\n      <el-table-column prop=\"person_name\" label=\"姓名\" align=\"center\" width=\"220\"></el-table-column>\r\n      <el-table-column prop=\"emotion\" label=\"情绪\" align=\"center\" width=\"220\"></el-table-column>\r\n      <el-table-column prop=\"score\" label=\"情绪强度\" align=\"center\" width=\"220\"></el-table-column>\r\n      <el-table-column prop=\"timestamp\" label=\"时间\" align=\"center\" width=\"220\"></el-table-column>\r\n      <el-table-column label=\"图像\" align=\"center\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          <img :src=\"scope.row.image_url\" alt=\"情绪图像\" style=\"width: 100px; height: 100px;\">\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"pagination.currentPage\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        :page-size=\"pagination.pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"pagination.totalItems\"\r\n        style=\"margin-top: 20px;\">\r\n    </el-pagination>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      filter: {\r\n        name: '',\r\n        emotionType: ''\r\n      },\r\n      pagination: {\r\n        currentPage: 1,\r\n        pageSize: 5,\r\n        totalItems: 0\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getData() {\r\n      let url = 'http://192.168.237.26:5001/api/statistic/emotions';\r\n      const params = new URLSearchParams();\r\n\r\n      // Adding filters\r\n      if (this.filter.name) params.append('name', this.filter.name);\r\n      if (this.filter.emotionType) params.append('emotionType', this.filter.emotionType);\r\n\r\n      // Adding pagination parameters\r\n      params.append('page', this.pagination.currentPage);\r\n      params.append('pageSize', this.pagination.pageSize);\r\n\r\n      url += `?${params.toString()}`;\r\n\r\n      this.$axios.get(url)\r\n          .then(res => {\r\n            if (res.data.code === 0 && res.data.data) {\r\n              this.tableData = res.data.data.items;\r\n              this.pagination.totalItems = res.data.data.total;  // Adjust according to your API response\r\n            } else {\r\n              this.$message.error(res.data.message || 'Failed to fetch data');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error(\"Error fetching data: \", error);\r\n            this.$message.error(\"服务器错误，请稍后再试！\");\r\n          });\r\n    },\r\n    handleSizeChange(newSize) {\r\n      this.pagination.pageSize = newSize;\r\n      this.getData();\r\n    },\r\n    handleCurrentChange(newPage) {\r\n      this.pagination.currentPage = newPage;\r\n      this.getData();\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getData();  // Initial data fetch when the component is mounted\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.filter-section {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":";AAmCA;EACAA,KAAA;IACA;MACAC,SAAA;MACAC,MAAA;QACAC,IAAA;QACAC,WAAA;MACA;MACAC,UAAA;QACAC,WAAA;QACAC,QAAA;QACAC,UAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,IAAAC,GAAA;MACA,MAAAC,MAAA,OAAAC,eAAA;;MAEA;MACA,SAAAX,MAAA,CAAAC,IAAA,EAAAS,MAAA,CAAAE,MAAA,cAAAZ,MAAA,CAAAC,IAAA;MACA,SAAAD,MAAA,CAAAE,WAAA,EAAAQ,MAAA,CAAAE,MAAA,qBAAAZ,MAAA,CAAAE,WAAA;;MAEA;MACAQ,MAAA,CAAAE,MAAA,cAAAT,UAAA,CAAAC,WAAA;MACAM,MAAA,CAAAE,MAAA,kBAAAT,UAAA,CAAAE,QAAA;MAEAI,GAAA,QAAAC,MAAA,CAAAG,QAAA;MAEA,KAAAC,MAAA,CAAAC,GAAA,CAAAN,GAAA,EACAO,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAnB,IAAA,CAAAoB,IAAA,UAAAD,GAAA,CAAAnB,IAAA,CAAAA,IAAA;UACA,KAAAC,SAAA,GAAAkB,GAAA,CAAAnB,IAAA,CAAAA,IAAA,CAAAqB,KAAA;UACA,KAAAhB,UAAA,CAAAG,UAAA,GAAAW,GAAA,CAAAnB,IAAA,CAAAA,IAAA,CAAAsB,KAAA;QACA;UACA,KAAAC,QAAA,CAAAC,KAAA,CAAAL,GAAA,CAAAnB,IAAA,CAAAyB,OAAA;QACA;MACA,GACAC,KAAA,CAAAF,KAAA;QACAG,OAAA,CAAAH,KAAA,0BAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAI,iBAAAC,OAAA;MACA,KAAAxB,UAAA,CAAAE,QAAA,GAAAsB,OAAA;MACA,KAAAnB,OAAA;IACA;IACAoB,oBAAAC,OAAA;MACA,KAAA1B,UAAA,CAAAC,WAAA,GAAAyB,OAAA;MACA,KAAArB,OAAA;IACA;EACA;EACAsB,QAAA;IACA,KAAAtB,OAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}