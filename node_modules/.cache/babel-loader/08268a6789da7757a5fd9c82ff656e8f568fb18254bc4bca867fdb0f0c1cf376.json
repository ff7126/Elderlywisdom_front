{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport io from 'socket.io-client';\nexport default {\n  data() {\n    return {\n      socket: null,\n      responseMessage: ''\n    };\n  },\n  mounted() {\n    this.initializeSocket();\n  },\n  methods: {\n    initializeSocket() {\n      this.socket = io('http://127.0.0.1:5000/liveVideo', {\n        transports: ['websocket', 'polling'],\n        withCredentials: true\n      });\n      this.socket.on('connect', () => {\n        console.log('Connected to server');\n      });\n      this.socket.on('video_frame', data => {\n        console.log('Received video frame:', data);\n        this.displayVideoFrame(data);\n      });\n    },\n    displayVideoFrame(data) {\n      const img = document.getElementById('video');\n      const arrayBufferView = new Uint8Array(data.data);\n      const blob = new Blob([arrayBufferView], {\n        type: 'image/jpeg'\n      });\n      const urlCreator = window.URL || window.webkitURL;\n      const imageUrl = urlCreator.createObjectURL(blob);\n      img.src = imageUrl;\n    },\n    startRecognition() {\n      fetch('http://127.0.0.1:5000/api/liveVideo/start-recognition', {\n        method: 'POST'\n      }).then(response => response.json()).then(data => {\n        this.responseMessage = data.message;\n        console.log(data.message);\n      }).catch(error => {\n        console.error('Error:', error);\n        this.responseMessage = 'Error starting recognition';\n      });\n    }\n  }\n};","map":{"version":3,"names":["io","data","socket","responseMessage","mounted","initializeSocket","methods","transports","withCredentials","on","console","log","displayVideoFrame","img","document","getElementById","arrayBufferView","Uint8Array","blob","Blob","type","urlCreator","window","URL","webkitURL","imageUrl","createObjectURL","src","startRecognition","fetch","method","then","response","json","message","catch","error"],"sources":["src/views/page/monitor/room.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>监控画面</h1>\r\n    <button @click=\"startRecognition\">Start Recognition</button>\r\n    <div id=\"response\">{{ responseMessage }}</div>\r\n    <img id=\"video\" alt=\"Video stream will appear here\">\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      socket: null,\r\n      responseMessage: '',\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initializeSocket();\r\n  },\r\n  methods: {\r\n    initializeSocket() {\r\n      this.socket = io('http://127.0.0.1:5000/liveVideo', {\r\n        transports: ['websocket', 'polling'],\r\n        withCredentials: true,\r\n      });\r\n\r\n      this.socket.on('connect', () => {\r\n        console.log('Connected to server');\r\n      });\r\n\r\n      this.socket.on('video_frame', (data) => {\r\n        console.log('Received video frame:', data);\r\n        this.displayVideoFrame(data);\r\n      });\r\n    },\r\n    displayVideoFrame(data) {\r\n      const img = document.getElementById('video');\r\n      const arrayBufferView = new Uint8Array(data.data);\r\n      const blob = new Blob([arrayBufferView], { type: 'image/jpeg' });\r\n      const urlCreator = window.URL || window.webkitURL;\r\n      const imageUrl = urlCreator.createObjectURL(blob);\r\n      img.src = imageUrl;\r\n    },\r\n    startRecognition() {\r\n      fetch('http://127.0.0.1:5000/api/liveVideo/start-recognition', {\r\n        method: 'POST',\r\n      })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this.responseMessage = data.message;\r\n            console.log(data.message);\r\n          })\r\n          .catch(error => {\r\n            console.error('Error:', error);\r\n            this.responseMessage = 'Error starting recognition';\r\n          });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 你的样式在这里 */\r\n</style>\r\n"],"mappings":";;;;;;;;AAUA,OAAAA,EAAA;AAEA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,eAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,gBAAA;EACA;EACAC,OAAA;IACAD,iBAAA;MACA,KAAAH,MAAA,GAAAF,EAAA;QACAO,UAAA;QACAC,eAAA;MACA;MAEA,KAAAN,MAAA,CAAAO,EAAA;QACAC,OAAA,CAAAC,GAAA;MACA;MAEA,KAAAT,MAAA,CAAAO,EAAA,gBAAAR,IAAA;QACAS,OAAA,CAAAC,GAAA,0BAAAV,IAAA;QACA,KAAAW,iBAAA,CAAAX,IAAA;MACA;IACA;IACAW,kBAAAX,IAAA;MACA,MAAAY,GAAA,GAAAC,QAAA,CAAAC,cAAA;MACA,MAAAC,eAAA,OAAAC,UAAA,CAAAhB,IAAA,CAAAA,IAAA;MACA,MAAAiB,IAAA,OAAAC,IAAA,EAAAH,eAAA;QAAAI,IAAA;MAAA;MACA,MAAAC,UAAA,GAAAC,MAAA,CAAAC,GAAA,IAAAD,MAAA,CAAAE,SAAA;MACA,MAAAC,QAAA,GAAAJ,UAAA,CAAAK,eAAA,CAAAR,IAAA;MACAL,GAAA,CAAAc,GAAA,GAAAF,QAAA;IACA;IACAG,iBAAA;MACAC,KAAA;QACAC,MAAA;MACA,GACAC,IAAA,CAAAC,QAAA,IAAAA,QAAA,CAAAC,IAAA,IACAF,IAAA,CAAA9B,IAAA;QACA,KAAAE,eAAA,GAAAF,IAAA,CAAAiC,OAAA;QACAxB,OAAA,CAAAC,GAAA,CAAAV,IAAA,CAAAiC,OAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACA1B,OAAA,CAAA0B,KAAA,WAAAA,KAAA;QACA,KAAAjC,eAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}