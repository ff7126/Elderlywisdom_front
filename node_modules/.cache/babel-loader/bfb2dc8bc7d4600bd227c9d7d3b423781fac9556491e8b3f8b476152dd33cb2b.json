{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  data() {\n    return {\n      tableData: [],\n      filter: {\n        name: '',\n        emotionType: ''\n      },\n      pagination: {\n        currentPage: 1,\n        pageSize: 10,\n        totalItems: 0\n      }\n    };\n  },\n  methods: {\n    getData() {\n      let url = 'http://192.168.57.26:5001/api/statistic/emotions';\n      const params = new URLSearchParams({\n        page: this.pagination.currentPage,\n        limit: this.pagination.pageSize\n      });\n      if (this.filter.name) params.append('name', this.filter.name);\n      if (this.filter.emotionType) params.append('emotionType', this.filter.emotionType);\n      url += `?${params.toString()}`;\n      this.$axios.get(url).then(res => {\n        if (res.data.code === 0) {\n          this.tableData = res.data.data;\n          this.pagination.totalItems = res.data.total; // Assuming your API sends back the total count\n        } else {\n          this.$message.error(res.data.message || 'Failed to fetch data');\n        }\n      }).catch(error => {\n        this.handleErrors(error);\n      });\n    },\n    handleSizeChange(newSize) {\n      this.pagination.pageSize = newSize;\n      this.getData();\n    },\n    handleCurrentChange(newPage) {\n      this.pagination.currentPage = newPage;\n      this.getData();\n    },\n    handleErrors(error) {\n      // Error handling logic here\n    }\n  },\n  mounted() {\n    this.getData();\n  }\n};","map":{"version":3,"names":["data","tableData","filter","name","emotionType","pagination","currentPage","pageSize","totalItems","methods","getData","url","params","URLSearchParams","page","limit","append","toString","$axios","get","then","res","code","total","$message","error","message","catch","handleErrors","handleSizeChange","newSize","handleCurrentChange","newPage","mounted"],"sources":["src/views/page/record/emotion.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"filter-section\">\r\n      <el-input v-model=\"filter.name\" placeholder=\"输入姓名搜索\"></el-input>\r\n      <el-select v-model=\"filter.emotionType\" placeholder=\"选择情绪类型\">\r\n        <el-option label=\"Happy\" value=\"happy\"></el-option>\r\n        <el-option label=\"Sad\" value=\"sad\"></el-option>\r\n      </el-select>\r\n      <el-button type=\"primary\" @click=\"getData\">搜索</el-button>\r\n    </div>\r\n    <el-table :data=\"tableData\" border style=\"width: 100%\">\r\n      <el-table-column prop=\"person_name\" label=\"姓名\" align=\"center\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"emotion\" label=\"情绪\" align=\"center\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"score\" label=\"情绪强度\" align=\"center\" width=\"100\"></el-table-column>\r\n      <el-table-column prop=\"timestamp\" label=\"时间\" align=\"center\" width=\"200\"></el-table-column>\r\n      <el-table-column label=\"图像\" align=\"center\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <img :src=\"scope.row.image_url\" alt=\"情绪图像\" style=\"width: 100px; height: 100px;\">\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"pagination.currentPage\"\r\n        :page-sizes=\"[5, 10, 20, 50, 100]\"\r\n        :page-size=\"pagination.pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"pagination.totalItems\"\r\n        style=\"margin-top: 20px;\">\r\n    </el-pagination>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      filter: {\r\n        name: '',\r\n        emotionType: ''\r\n      },\r\n      pagination: {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        totalItems: 0\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getData() {\r\n      let url = 'http://192.168.57.26:5001/api/statistic/emotions';\r\n      const params = new URLSearchParams({\r\n        page: this.pagination.currentPage,\r\n        limit: this.pagination.pageSize\r\n      });\r\n      if (this.filter.name) params.append('name', this.filter.name);\r\n      if (this.filter.emotionType) params.append('emotionType', this.filter.emotionType);\r\n      url += `?${params.toString()}`;\r\n\r\n      this.$axios.get(url)\r\n          .then(res => {\r\n            if (res.data.code === 0) {\r\n              this.tableData = res.data.data;\r\n              this.pagination.totalItems = res.data.total; // Assuming your API sends back the total count\r\n            } else {\r\n              this.$message.error(res.data.message || 'Failed to fetch data');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            this.handleErrors(error);\r\n          });\r\n    },\r\n    handleSizeChange(newSize) {\r\n      this.pagination.pageSize = newSize;\r\n      this.getData();\r\n    },\r\n    handleCurrentChange(newPage) {\r\n      this.pagination.currentPage = newPage;\r\n      this.getData();\r\n    },\r\n    handleErrors(error) {\r\n      // Error handling logic here\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getData();\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n.filter-section {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":";AAoCA;EACAA,KAAA;IACA;MACAC,SAAA;MACAC,MAAA;QACAC,IAAA;QACAC,WAAA;MACA;MACAC,UAAA;QACAC,WAAA;QACAC,QAAA;QACAC,UAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,IAAAC,GAAA;MACA,MAAAC,MAAA,OAAAC,eAAA;QACAC,IAAA,OAAAT,UAAA,CAAAC,WAAA;QACAS,KAAA,OAAAV,UAAA,CAAAE;MACA;MACA,SAAAL,MAAA,CAAAC,IAAA,EAAAS,MAAA,CAAAI,MAAA,cAAAd,MAAA,CAAAC,IAAA;MACA,SAAAD,MAAA,CAAAE,WAAA,EAAAQ,MAAA,CAAAI,MAAA,qBAAAd,MAAA,CAAAE,WAAA;MACAO,GAAA,QAAAC,MAAA,CAAAK,QAAA;MAEA,KAAAC,MAAA,CAAAC,GAAA,CAAAR,GAAA,EACAS,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAArB,IAAA,CAAAsB,IAAA;UACA,KAAArB,SAAA,GAAAoB,GAAA,CAAArB,IAAA,CAAAA,IAAA;UACA,KAAAK,UAAA,CAAAG,UAAA,GAAAa,GAAA,CAAArB,IAAA,CAAAuB,KAAA;QACA;UACA,KAAAC,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAArB,IAAA,CAAA0B,OAAA;QACA;MACA,GACAC,KAAA,CAAAF,KAAA;QACA,KAAAG,YAAA,CAAAH,KAAA;MACA;IACA;IACAI,iBAAAC,OAAA;MACA,KAAAzB,UAAA,CAAAE,QAAA,GAAAuB,OAAA;MACA,KAAApB,OAAA;IACA;IACAqB,oBAAAC,OAAA;MACA,KAAA3B,UAAA,CAAAC,WAAA,GAAA0B,OAAA;MACA,KAAAtB,OAAA;IACA;IACAkB,aAAAH,KAAA;MACA;IAAA;EAEA;EACAQ,QAAA;IACA,KAAAvB,OAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}