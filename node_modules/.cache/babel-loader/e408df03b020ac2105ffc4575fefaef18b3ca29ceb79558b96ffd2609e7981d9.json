{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nexport default {\n  data() {\n    var user = localStorage.getItem(\"userName\");\n    var validatePass = (rules, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rules, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        userid: user,\n        pass: ''\n      },\n      rules: {\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm: function () {},\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["data","user","localStorage","getItem","validatePass","rules","value","callback","Error","ruleForm","checkPass","$refs","validateField","validatePass2","pass","userid","validator","trigger","methods","submitForm","resetForm","formName","resetFields"],"sources":["src/views/login/changePwd.vue"],"sourcesContent":["<template>\r\n  <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\" style=\"margin-left: 300px\">\r\n    <el-form style=\"height: 5px;\"></el-form>\r\n    <el-form style=\"height: 20px; margin-left: 100px; margin-top:80px;font-size: 25px; font-weight: bold;color: #676060\">修改密码:</el-form>\r\n    <el-form-item label=\"用户名\" prop=\"userid\" style=\"margin-left:100px; margin-top:30px\">\r\n      <el-col :span=\"8\">\r\n        <el-input type=\"text\" v-model=\"ruleForm.userid\" autocomplete=\"off\" :disabled=\"true\"></el-input>\r\n      </el-col>\r\n    </el-form-item>\r\n    <el-form-item label=\"新密码\" prop=\"pass\" style=\"margin-left:100px; margin-top:30px\">\r\n      <el-col :span=\"8\">\r\n        <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\r\n      </el-col>\r\n    </el-form-item>\r\n    <el-form-item label=\"确认密码\" prop=\"checkPass\" style=\"margin-left:100px; margin-top:30px\">\r\n      <el-col :span=\"8\">\r\n        <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></el-input>\r\n      </el-col>\r\n    </el-form-item>\r\n    <el-form-item  style=\"margin-left:280px; margin-top:30px\">\r\n      <el-button type=\"primary\" @click=\"submitForm('ruleForm')\" style=\"border-color:#f88901;background-color: #F3CEAE\">提交</el-button>\r\n      <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    var user = localStorage.getItem(\"userName\")\r\n    var validatePass = (rules, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'));\r\n      } else {\r\n        if (this.ruleForm.checkPass !== '') {\r\n          this.$refs.ruleForm.validateField('checkPass');\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    var validatePass2 = (rules, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'));\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error('两次输入密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      ruleForm: {\r\n        userid:user,\r\n        pass: '',\r\n      },\r\n      rules: {\r\n        pass: [\r\n          { validator: validatePass, trigger: 'blur' }\r\n        ],\r\n        checkPass: [\r\n          { validator: validatePass2, trigger: 'blur' }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm:function() {\r\n\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AA2BA;EACAA,KAAA;IACA,IAAAC,IAAA,GAAAC,YAAA,CAAAC,OAAA;IACA,IAAAC,YAAA,GAAAA,CAAAC,KAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,SAAAC,QAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,QAAA,CAAAG,aAAA;QACA;QACAL,QAAA;MACA;IACA;IACA,IAAAM,aAAA,GAAAA,CAAAR,KAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,QAAA,CAAAK,IAAA;QACAP,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAE,QAAA;QACAM,MAAA,EAAAd,IAAA;QACAa,IAAA;MACA;MACAT,KAAA;QACAS,IAAA,GACA;UAAAE,SAAA,EAAAZ,YAAA;UAAAa,OAAA;QAAA,EACA;QACAP,SAAA,GACA;UAAAM,SAAA,EAAAH,aAAA;UAAAI,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,UAAA,WAAAA,CAAA,GAEA;IACAC,UAAAC,QAAA;MACA,KAAAV,KAAA,CAAAU,QAAA,EAAAC,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}