{"ast":null,"code":"import io from 'socket.io-client';\nexport default {\n  data() {\n    return {\n      videoSrc: ''\n    };\n  },\n  mounted() {\n    // 连接到服务器获取远程视频流\n    const socket = io('http://fan.v1.idcfengye.com');\n    socket.on('connect', () => {\n      console.log('Connected to server');\n      socket.emit('start_video');\n    });\n    socket.on('video_frame', data => {\n      this.videoSrc = 'data:image/jpeg;base64,' + data.frame;\n    });\n\n    // 获取本地视频流\n    this.getLocalVideo();\n  },\n  methods: {\n    getLocalVideo() {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        this.$refs.localVideo.srcObject = stream;\n      }).catch(error => {\n        console.error('Error accessing the local camera', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["io","data","videoSrc","mounted","socket","on","console","log","emit","frame","getLocalVideo","methods","navigator","mediaDevices","getUserMedia","video","then","stream","$refs","localVideo","srcObject","catch","error"],"sources":["src/views/page/monitor/monitor.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <h1>实时监控</h1>\r\n    <div class=\"video-container\">\r\n      <img :src=\"videoSrc\" alt=\"Video Stream from Server\" />\r\n      <video ref=\"localVideo\" autoplay playsinline muted></video>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      videoSrc: ''\r\n    };\r\n  },\r\n  mounted() {\r\n    // 连接到服务器获取远程视频流\r\n    const socket = io('http://fan.v1.idcfengye.com');\r\n    socket.on('connect', () => {\r\n      console.log('Connected to server');\r\n      socket.emit('start_video');\r\n    });\r\n\r\n    socket.on('video_frame', (data) => {\r\n      this.videoSrc = 'data:image/jpeg;base64,' + data.frame;\r\n    });\r\n\r\n    // 获取本地视频流\r\n    this.getLocalVideo();\r\n  },\r\n  methods: {\r\n    getLocalVideo() {\r\n      navigator.mediaDevices.getUserMedia({ video: true })\r\n          .then((stream) => {\r\n            this.$refs.localVideo.srcObject = stream;\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error accessing the local camera', error);\r\n          });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n#app {\r\n  text-align: center;\r\n}\r\n\r\n.video-container {\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n\r\nimg, video {\r\n  width: 49%; /* 让每个视频占用一半宽度 */\r\n  height: auto;\r\n}\r\n</style>\r\n\r\n"],"mappings":"AAaA,OAAAA,EAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,MAAAC,MAAA,GAAAJ,EAAA;IACAI,MAAA,CAAAC,EAAA;MACAC,OAAA,CAAAC,GAAA;MACAH,MAAA,CAAAI,IAAA;IACA;IAEAJ,MAAA,CAAAC,EAAA,gBAAAJ,IAAA;MACA,KAAAC,QAAA,+BAAAD,IAAA,CAAAQ,KAAA;IACA;;IAEA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAD,cAAA;MACAE,SAAA,CAAAC,YAAA,CAAAC,YAAA;QAAAC,KAAA;MAAA,GACAC,IAAA,CAAAC,MAAA;QACA,KAAAC,KAAA,CAAAC,UAAA,CAAAC,SAAA,GAAAH,MAAA;MACA,GACAI,KAAA,CAAAC,KAAA;QACAhB,OAAA,CAAAgB,KAAA,qCAAAA,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}