{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\";\nimport { login, loginAuto, register } from \"@/api/user\";\nexport default {\n  name: \"Login.vue\",\n  data() {\n    return {\n      active: {\n        login: true,\n        register: false\n      },\n      showPassword: false,\n      // Add this line\n      errorMessage: '',\n      successMessage: '',\n      code: '',\n      true_code: '',\n      yanzheng_arr: [],\n      loginForm: {\n        user_tele: '',\n        password: ''\n      },\n      token: localStorage.getItem(\"token\"),\n      registerForm: {\n        username: '',\n        password: '',\n        phone: '',\n        realName: '',\n        email: ''\n      }\n    };\n  },\n  methods: {\n    //密码是否可视\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    },\n    //登录注册之间的跳转\n    go(type) {\n      this.active = {\n        login: type === 'login',\n        register: type === 'register'\n      };\n      if (type === 'register') {\n        this.$nextTick(() => {\n          const registerButton = this.$refs.registerButton;\n          if (registerButton) {\n            registerButton.click();\n          }\n        });\n      }\n    },\n    //警告提示\n    alert() {\n      this.$message({\n        message: this.errorMessage,\n        type: 'warning'\n      });\n    },\n    //成功提示\n    node() {\n      this.$message({\n        message: this.successMessage,\n        type: 'success'\n      });\n    },\n    submit() {\n      console.log(this.active.login, this.active.register, 1312);\n      if (this.active.login) {\n        if (this.code === this.true_code) {\n          //先调自动登录接口\n          loginAuto(this.token).then(res => {\n            console.log(res.data);\n            if (res.code === 200) {\n              this.$store.commit('user/saveToken', res.data.token); //保存新token\n            } else {\n              //未登录则调登录接口\n              login(this.loginForm).then(res => {\n                console.log(res.data);\n                if (res.code === 500) {\n                  this.errorMessage = '该账号密码错误';\n                  this.alert();\n                } else if (res.code === 200) {\n                  //保存token\n                  this.$store.commit('user/saveToken', res.data.token);\n                  // this.$store.commit('user/saveLoginUser', res.data.uid)\n                  // Cookies.set('token',JSON.stringify(res.data))\n                  //跳转到主页\n                  this.$router.push('/home');\n                }\n              }).catch(err => {\n                console.log(err);\n              });\n            }\n          }).catch(err => {\n            console.log(err);\n          });\n          // login(this.loginForm).then(res => {\n          //   console.log(res.data);\n          //   if(res.code===500){\n          //     this.errorMessage='该账号密码错误'\n          //     this.alert();\n          //   }else if(res.code===200){\n          //     //保存token\n          //     this.$store.commit('user/saveToken', res.data.token)\n          //     // this.$store.commit('user/saveLoginUser', res.data.uid)\n          //     // Cookies.set('token',JSON.stringify(res.data))\n          //     //跳转到主页\n          //     this.$router.push('/home');\n          //   }\n          // }).catch((err)=>{\n          //   console.log(err);\n          // })\n        } else {\n          this.errorMessage = '验证码输入错误';\n          this.alert();\n        }\n      } else if (this.active.register) {\n        if (this.code === this.true_code) {\n          register(this.registerForm).then(res => {\n            console.log(res.data);\n            if (res.code === 200) {\n              this.successMessage = '成功注册';\n              this.node();\n              this.go('login');\n              // }else if(this.registerForm.user_name.length<5){\n              //   this.errorMessage='用户名不得小于5位'\n              //   this.alert();\n              // }else if(this.registerForm.password.length<6){\n              //   this.errorMessage='密码不得小于6位';\n              //   this.alert();\n            } else if (res.code === 500) {\n              this.errorMessage = res.data.msg;\n              this.alert();\n            }\n          }).catch(err => {\n            console.log(err);\n          });\n        } else {\n          this.errorMessage = '验证码输入错误';\n          this.alert();\n        }\n      }\n    },\n    draw(show_num) {\n      var canvas_width = document.querySelector(\"#canvas\").clientWidth;\n      var canvas_height = document.querySelector(\"#canvas\").clientHeight;\n      var canvas = document.getElementById(\"canvas\"); //获取到canvas\n      var context = canvas.getContext(\"2d\"); //获取到canvas画图\n      canvas.width = canvas_width;\n      canvas.height = canvas_height;\n      var sCode = \"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,1,2,3,4,5,6,7,8,9,0\";\n      var aCode = sCode.split(\",\");\n      var aLength = aCode.length; //获取到数组的长度\n\n      //4个验证码数\n      for (var i = 0; i <= 3; i++) {\n        var j = Math.floor(Math.random() * aLength); //获取到随机的索引值\n        var deg = Math.random() * 30 * Math.PI / 180; //产生0~30之间的随机弧度\n        var txt = aCode[j]; //得到随机的一个内容\n        show_num[i] = txt.toLowerCase(); // 依次把取得的内容放到数组里面\n        var x = 10 + i * 20; //文字在canvas上的x坐标\n        var y = 20 + Math.random() * 8; //文字在canvas上的y坐标\n        context.font = \"bold 23px 微软雅黑\";\n        context.translate(x, y);\n        context.rotate(deg);\n        context.fillStyle = this.randomColor();\n        context.fillText(txt, 0, 0);\n        context.rotate(-deg);\n        context.translate(-x, -y);\n      }\n      //验证码上显示6条线条\n      for (var i = 0; i <= 5; i++) {\n        context.strokeStyle = this.randomColor();\n        context.beginPath();\n        context.moveTo(Math.random() * canvas_width, Math.random() * canvas_height);\n        context.lineTo(Math.random() * canvas_width, Math.random() * canvas_height);\n        context.stroke();\n      }\n      //验证码上显示31个小点\n      for (var i = 0; i <= 30; i++) {\n        context.strokeStyle = this.randomColor();\n        context.beginPath();\n        var x = Math.random() * canvas_width;\n        var y = Math.random() * canvas_height;\n        context.moveTo(x, y);\n        context.lineTo(x + 1, y + 1);\n        context.stroke();\n      }\n\n      //最后把取得的验证码数组存起来，方式不唯一\n      var num = show_num.join(\"\");\n      // console.log(num);\n      this.true_code = num;\n    },\n    //得到随机的颜色值\n    randomColor() {\n      var r = Math.floor(Math.random() * 256);\n      var g = Math.floor(Math.random() * 256);\n      var b = Math.floor(Math.random() * 256);\n      return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    },\n    //canvas点击刷新\n    handleCanvas() {\n      this.draw(this.yanzheng_arr);\n    }\n  }\n};","map":{"version":3,"names":["request","login","loginAuto","register","name","data","active","showPassword","errorMessage","successMessage","code","true_code","yanzheng_arr","loginForm","user_tele","password","token","localStorage","getItem","registerForm","username","phone","realName","email","methods","togglePasswordVisibility","go","type","$nextTick","registerButton","$refs","click","alert","$message","message","node","submit","console","log","then","res","$store","commit","$router","push","catch","err","msg","draw","show_num","canvas_width","document","querySelector","clientWidth","canvas_height","clientHeight","canvas","getElementById","context","getContext","width","height","sCode","aCode","split","aLength","length","i","j","Math","floor","random","deg","PI","txt","toLowerCase","x","y","font","translate","rotate","fillStyle","randomColor","fillText","strokeStyle","beginPath","moveTo","lineTo","stroke","num","join","r","g","b","handleCanvas"],"sources":["src/views/login/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"content_login\">\r\n    <div id=\"app\" class=\"container\">\r\n      <img src=\"@/assets/bg1.jpg\" alt=\"\">\r\n      <div class=\"panel\">\r\n        <div class=\"switch\">\r\n          <button class=\"white-button\" @click=\"handleCanvas\"></button>\r\n          <span :class='{\"active\": active.login}' @click=\"go('login')\">登录</span>\r\n          <span>/</span>\r\n          <span :class='{\"active\": active.register}' @click=\"go('register')\">注册</span>\r\n          <button class=\"white-button\" ref=\"registerButton\" @click=\"handleCanvas\"></button>\r\n        </div>\r\n        <div class=\"form\" id=\"fromLogin\">\r\n          <!-- 如果按钮选择的是注册就展示这个里面的内容 -->\r\n          <el-form ref=\"registerForm\" v-if=\"active.register\">\r\n            <el-form-item prop=\"username\" class=\"input\">\r\n              <el-input placeholder=\"请输入用户名\" size=\"medium\" style=\"margin: 10px 0\" prefix-icon=\"el-icon-user\" v-model=\"registerForm.username\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"phone\" class=\"input\">\r\n              <el-input placeholder=\"请输入手机号码\" size=\"medium\" style=\"margin: 10px 0\" prefix-icon=\"el-icon-phone\" v-model=\"registerForm.phone\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"password\" class=\"input\">\r\n              <el-input placeholder=\"请输入密码\" size=\"medium\" style=\"margin: 10px 0\" prefix-icon=\"el-icon-aim\" show-password v-model=\"registerForm.password\"></el-input>\r\n            </el-form-item>\r\n            <el-form style=\"display: flex; height: 2rem;\">\r\n              <el-form-item prop=\"username\">\r\n                <el-input placeholder=\"请输入验证码\" size=\"medium\" style=\"margin: 10px 0\" prefix-icon=\"el-icon-aim\" v-model=\"code\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item>\r\n                <canvas id=\"canvas\" width=\"96px\" height=\"44px\" @click=\"handleCanvas\"></canvas>\r\n              </el-form-item>\r\n            </el-form>\r\n            <el-form-item prop=\"realName\" class=\"input\">\r\n              <el-input placeholder=\"请输入真实姓名\" size=\"medium\" style=\"margin: 10px 0\" prefix-icon=\"el-icon-user\" v-model=\"registerForm.realName\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"email\" class=\"input\">\r\n              <el-input placeholder=\"请输入邮箱\" size=\"medium\" style=\"margin: 10px 0\" prefix-icon=\"el-icon-user\" v-model=\"registerForm.email\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button  @click=\"submit\">注册</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n\r\n          <!-- 如果按钮选择的是登录就展示这个里面的内容 -->\r\n          <el-form ref=\"loginForm\" v-if=\"active.login\">\r\n            <el-form-item prop=\"username\" class=\"input\">\r\n              <el-input placeholder=\"请输入手机号\" size=\"15px\" style=\"margin: 15px 0\" prefix-icon=\"el-icon-user\" v-model=\"loginForm.user_tele\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"password\" class=\"input\">\r\n              <el-input placeholder=\"请输入密码\" size=\"medium\" style=\"margin: 10px 0\" prefix-icon=\"el-icon-aim\" show-password v-model=\"loginForm.password\"></el-input>\r\n              <!-- Add this button below the password input field -->\r\n              <span class=\"toggle-password\" @click=\"togglePasswordVisibility\">\r\n                <i :class=\"showPassword ? 'el-icon-eye' : 'el-icon-eye-off'\"></i>\r\n              </span>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button @click=\"submit\">登录</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nimport {login, loginAuto, register} from \"@/api/user\";\r\n\r\nexport default {\r\n  name: \"Login.vue\",\r\n  data() {\r\n    return {\r\n      active: {\r\n        login: true,\r\n        register: false\r\n      },\r\n      showPassword: false, // Add this line\r\n      errorMessage:'',\r\n      successMessage:'',\r\n      code:'',\r\n      true_code:'',\r\n      yanzheng_arr:[],\r\n      loginForm :{\r\n        user_tele : '',\r\n        password : ''\r\n      },\r\n      token: localStorage.getItem(\"token\"),\r\n      registerForm:{\r\n        username : '',\r\n        password : '',\r\n        phone:'',\r\n        realName:'',\r\n        email:''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    //密码是否可视\r\n    togglePasswordVisibility() {\r\n      this.showPassword = !this.showPassword;\r\n    },\r\n    //登录注册之间的跳转\r\n    go(type) {\r\n      this.active = {\r\n        login: type === 'login',\r\n        register: type === 'register'\r\n      }\r\n      if (type === 'register') {\r\n        this.$nextTick(() => {\r\n          const registerButton = this.$refs.registerButton;\r\n          if (registerButton) {\r\n            registerButton.click();\r\n          }\r\n        });\r\n      }\r\n    },\r\n    //警告提示\r\n    alert(){\r\n      this.$message({\r\n        message:this.errorMessage,\r\n        type: 'warning'\r\n      });\r\n    },\r\n    //成功提示\r\n    node(){\r\n      this.$message({\r\n        message:this.successMessage,\r\n        type: 'success'\r\n      });\r\n    },\r\n    submit() {\r\n      console.log(this.active.login,this.active.register,1312)\r\n      if (this.active.login) {\r\n        if(this.code === this.true_code){\r\n          //先调自动登录接口\r\n          loginAuto(this.token).then(res => {\r\n            console.log(res.data);\r\n            if(res.code===200){\r\n              this.$store.commit('user/saveToken', res.data.token)//保存新token\r\n            }else {//未登录则调登录接口\r\n              login(this.loginForm).then(res => {\r\n                console.log(res.data);\r\n                if(res.code===500){\r\n                  this.errorMessage='该账号密码错误'\r\n                  this.alert();\r\n                }else if(res.code===200){\r\n                  //保存token\r\n                  this.$store.commit('user/saveToken', res.data.token)\r\n                  // this.$store.commit('user/saveLoginUser', res.data.uid)\r\n                  // Cookies.set('token',JSON.stringify(res.data))\r\n                  //跳转到主页\r\n                  this.$router.push('/home');\r\n                }\r\n              }).catch((err)=>{\r\n                console.log(err);\r\n              })}\r\n          }).catch((err)=>{\r\n            console.log(err);\r\n          })\r\n          // login(this.loginForm).then(res => {\r\n          //   console.log(res.data);\r\n          //   if(res.code===500){\r\n          //     this.errorMessage='该账号密码错误'\r\n          //     this.alert();\r\n          //   }else if(res.code===200){\r\n          //     //保存token\r\n          //     this.$store.commit('user/saveToken', res.data.token)\r\n          //     // this.$store.commit('user/saveLoginUser', res.data.uid)\r\n          //     // Cookies.set('token',JSON.stringify(res.data))\r\n          //     //跳转到主页\r\n          //     this.$router.push('/home');\r\n          //   }\r\n          // }).catch((err)=>{\r\n          //   console.log(err);\r\n          // })\r\n        }else{\r\n          this.errorMessage='验证码输入错误';\r\n          this.alert();\r\n        }\r\n      } else if (this.active.register) {\r\n        if(this.code === this.true_code){\r\n          register(this.registerForm).then(res => {\r\n            console.log(res.data);\r\n            if(res.code===200){\r\n              this.successMessage='成功注册';\r\n              this.node();\r\n              this.go('login');\r\n            // }else if(this.registerForm.user_name.length<5){\r\n            //   this.errorMessage='用户名不得小于5位'\r\n            //   this.alert();\r\n            // }else if(this.registerForm.password.length<6){\r\n            //   this.errorMessage='密码不得小于6位';\r\n            //   this.alert();\r\n            }else if(res.code===500){\r\n              this.errorMessage=res.data.msg;\r\n              this.alert();\r\n            }\r\n          }).catch((err)=>{\r\n            console.log(err);\r\n          })\r\n        }else{\r\n          this.errorMessage='验证码输入错误';\r\n          this.alert();\r\n        }\r\n      }\r\n    },\r\n    draw(show_num) {\r\n      var canvas_width =  document.querySelector(\"#canvas\").clientWidth;\r\n      var canvas_height = document.querySelector(\"#canvas\").clientHeight;\r\n      var canvas = document.getElementById(\"canvas\"); //获取到canvas\r\n      var context = canvas.getContext(\"2d\"); //获取到canvas画图\r\n      canvas.width = canvas_width;\r\n      canvas.height = canvas_height;\r\n      var sCode = \"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,1,2,3,4,5,6,7,8,9,0\";\r\n      var aCode = sCode.split(\",\");\r\n      var aLength = aCode.length; //获取到数组的长度\r\n\r\n      //4个验证码数\r\n      for (var i = 0; i <= 3; i++) {\r\n        var j = Math.floor(Math.random() * aLength); //获取到随机的索引值\r\n        var deg = (Math.random() * 30 * Math.PI) / 180; //产生0~30之间的随机弧度\r\n        var txt = aCode[j]; //得到随机的一个内容\r\n        show_num[i] = txt.toLowerCase();// 依次把取得的内容放到数组里面\r\n        var x = 10 + i * 20; //文字在canvas上的x坐标\r\n        var y = 20 + Math.random() * 8; //文字在canvas上的y坐标\r\n        context.font = \"bold 23px 微软雅黑\";\r\n\r\n        context.translate(x, y);\r\n        context.rotate(deg);\r\n\r\n        context.fillStyle = this.randomColor();\r\n        context.fillText(txt, 0, 0);\r\n\r\n        context.rotate(-deg);\r\n        context.translate(-x, -y);\r\n      }\r\n      //验证码上显示6条线条\r\n      for (var i = 0; i <= 5; i++) {\r\n        context.strokeStyle = this.randomColor();\r\n        context.beginPath();\r\n        context.moveTo(\r\n            Math.random() * canvas_width,\r\n            Math.random() * canvas_height\r\n        );\r\n        context.lineTo(\r\n            Math.random() * canvas_width,\r\n            Math.random() * canvas_height\r\n        );\r\n        context.stroke();\r\n      }\r\n      //验证码上显示31个小点\r\n      for (var i = 0; i <= 30; i++) {\r\n        context.strokeStyle = this.randomColor();\r\n        context.beginPath();\r\n        var x = Math.random() * canvas_width;\r\n        var y = Math.random() * canvas_height;\r\n        context.moveTo(x, y);\r\n        context.lineTo(x + 1, y + 1);\r\n        context.stroke();\r\n      }\r\n\r\n      //最后把取得的验证码数组存起来，方式不唯一\r\n      var num = show_num.join(\"\");\r\n      // console.log(num);\r\n      this.true_code = num\r\n    },\r\n    //得到随机的颜色值\r\n    randomColor() {\r\n      var r = Math.floor(Math.random() * 256);\r\n      var g = Math.floor(Math.random() * 256);\r\n      var b = Math.floor(Math.random() * 256);\r\n      return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r\n    },\r\n    //canvas点击刷新\r\n    handleCanvas(){\r\n      this.draw(this.yanzheng_arr);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n*{\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.content_login{\r\n  /* 100%的窗口高度 */\r\n  height: 100vh;\r\n  /* 弹性布局 水平 + 垂直居中 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  /* 渐变背景 */\r\n  background: linear-gradient(45deg, rgb(243, 206, 174), rgb(248, 226, 197)) fixed;\r\n}\r\n\r\n.container{\r\n  /* 相对定位 */\r\n  position: relative;\r\n  width: 70rem;\r\n}\r\n\r\n.container img{\r\n  width: 70rem;\r\n}\r\n\r\n.panel{\r\n  width: 44%;\r\n  margin: 4rem -2rem 0;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.switch span{\r\n  color: #ccc;\r\n  font-size: 1.4rem;\r\n  /* 鼠标放上变小手 */\r\n  cursor: pointer;\r\n}\r\n\r\n.switch span.active{\r\n  color: rgb(248, 226, 197);\r\n}\r\n\r\n.form{\r\n  width: 15rem;\r\n  margin: 3rem -10rem 0;\r\n}\r\n\r\n.form .input{\r\n  position: relative;\r\n  opacity: 1;\r\n  height: 2rem;\r\n  width: 100%;\r\n  margin: 2rem 0;\r\n  transition: 0.4s;\r\n}\r\n\r\n.form input{\r\n  outline: none;\r\n  width: 100%;\r\n  border: none;\r\n  border-bottom: .1rem solid rgb(248, 226, 197);\r\n  position: relative;\r\n  line-height: 35px;\r\n  background-color: transparent;\r\n  z-index: 1;\r\n}\r\n\r\n.form span{\r\n  display: block;\r\n  color: rgb(3, 39, 76);\r\n  font-size: 0.8rem;\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n.form button{\r\n  border: none;\r\n  outline: none;\r\n  margin: 2.5rem 0 0;\r\n  width: 100%;\r\n  height: 3rem;\r\n  border-radius: 3rem;\r\n  background:linear-gradient(45deg, rgb(243, 206, 174), rgb(248, 226, 197)) ;\r\n  box-shadow: 0 0 8px rgb(243, 206, 174);\r\n  cursor: pointer;\r\n  color: white;\r\n}\r\n\r\n.toggle-password {\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 10px;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n}\r\n\r\n.white-button {\r\n  background-color: white;\r\n  border: none;\r\n  color: black;\r\n  padding: 12px 8px;\r\n  border-radius: 4px;\r\n}\r\n\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}