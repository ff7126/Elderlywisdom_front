{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    var validatePass = (rules, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (!/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/.test(value)) {\n        callback(new Error('密码至少8个字符，包含字母和数字'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rules, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        username: '',\n        pass: '',\n        checkPass: ''\n      },\n      rules: {\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted() {\n    const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n    if (userInfo) {\n      this.ruleForm.username = userInfo.username;\n      this.ruleForm.id = userInfo.id; // 假设用户信息中包含id\n    }\n  },\n\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          const updateData = {\n            id: parseInt(this.ruleForm.id, 10),\n            // 从ruleForm中获取id\n            new_password: this.ruleForm.pass\n          };\n          axios.put('http://xiao.free.idcfengye.com/api/admin/update_password', updateData, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(res => {\n            if (res.data.code === \"0\") {\n              this.$message.success('密码修改成功');\n            } else {\n              this.$message.error('密码修改失败：' + res.data.message);\n            }\n          }).catch(error => {\n            console.error(error);\n            this.$message.error('密码修改失败');\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","validatePass","rules","value","callback","Error","test","ruleForm","checkPass","$refs","validateField","validatePass2","pass","username","validator","trigger","mounted","userInfo","JSON","parse","localStorage","getItem","id","methods","submitForm","formName","validate","valid","updateData","parseInt","new_password","put","headers","then","res","code","$message","success","error","message","catch","console","log","resetForm","resetFields"],"sources":["src/views/login/changePwd.vue"],"sourcesContent":["<template>\r\n  <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\" style=\"margin-left: 300px\">\r\n    <el-form style=\"height: 5px;\"></el-form>\r\n    <el-form style=\"height: 20px; margin-left: 100px; margin-top:80px;font-size: 25px; font-weight: bold;color: #676060\">修改密码:</el-form>\r\n    <el-form-item label=\"用户名\" prop=\"username\" style=\"margin-left:100px; margin-top:30px\">\r\n      <el-col :span=\"8\">\r\n        <el-input type=\"text\" v-model=\"ruleForm.username\" autocomplete=\"off\" :disabled=\"true\"></el-input>\r\n      </el-col>\r\n    </el-form-item>\r\n    <el-form-item label=\"新密码\" prop=\"pass\" style=\"margin-left:100px; margin-top:30px\">\r\n      <el-col :span=\"8\">\r\n        <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\r\n      </el-col>\r\n    </el-form-item>\r\n    <el-form-item label=\"确认密码\" prop=\"checkPass\" style=\"margin-left:100px; margin-top:30px\">\r\n      <el-col :span=\"8\">\r\n        <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></el-input>\r\n      </el-col>\r\n    </el-form-item>\r\n    <el-form-item style=\"margin-left:280px; margin-top:30px\">\r\n      <el-button type=\"primary\" @click=\"submitForm('ruleForm')\" style=\"border-color:#f39bbd;background-color: #f3aecd\">提交</el-button>\r\n      <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    var validatePass = (rules, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'));\r\n      } else if (!/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/.test(value)) {\r\n        callback(new Error('密码至少8个字符，包含字母和数字'));\r\n      } else {\r\n        if (this.ruleForm.checkPass !== '') {\r\n          this.$refs.ruleForm.validateField('checkPass');\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    var validatePass2 = (rules, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'));\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error('两次输入密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      ruleForm: {\r\n        username: '',\r\n        pass: '',\r\n        checkPass: ''\r\n      },\r\n      rules: {\r\n        pass: [\r\n          {validator: validatePass, trigger: 'blur'}\r\n        ],\r\n        checkPass: [\r\n          {validator: validatePass2, trigger: 'blur'}\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    const userInfo = JSON.parse(localStorage.getItem('userInfo'));\r\n    if (userInfo) {\r\n      this.ruleForm.username = userInfo.username;\r\n      this.ruleForm.id = userInfo.id; // 假设用户信息中包含id\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          const updateData = {\r\n            id: parseInt(this.ruleForm.id, 10),  // 从ruleForm中获取id\r\n            new_password: this.ruleForm.pass\r\n          };\r\n          axios.put('http://xiao.free.idcfengye.com/api/admin/update_password', updateData, {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          })\r\n              .then(res => {\r\n                if (res.data.code === \"0\") {\r\n                  this.$message.success('密码修改成功');\r\n                } else {\r\n                  this.$message.error('密码修改失败：' + res.data.message);\r\n                }\r\n              })\r\n              .catch(error => {\r\n                console.error(error);\r\n                this.$message.error('密码修改失败');\r\n              });\r\n        } else {\r\n          console.log('error submit!!');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AA2BA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA,IAAAC,YAAA,GAAAA,CAAAC,KAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,qDAAAC,IAAA,CAAAH,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,SAAAE,QAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,QAAA,CAAAG,aAAA;QACA;QACAN,QAAA;MACA;IACA;IACA,IAAAO,aAAA,GAAAA,CAAAT,KAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAI,QAAA,CAAAK,IAAA;QACAR,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAG,QAAA;QACAM,QAAA;QACAD,IAAA;QACAJ,SAAA;MACA;MACAN,KAAA;QACAU,IAAA,GACA;UAAAE,SAAA,EAAAb,YAAA;UAAAc,OAAA;QAAA,EACA;QACAP,SAAA,GACA;UAAAM,SAAA,EAAAH,aAAA;UAAAI,OAAA;QAAA;MAEA;IACA;EACA;EACAC,QAAA;IACA,MAAAC,QAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA,IAAAJ,QAAA;MACA,KAAAV,QAAA,CAAAM,QAAA,GAAAI,QAAA,CAAAJ,QAAA;MACA,KAAAN,QAAA,CAAAe,EAAA,GAAAL,QAAA,CAAAK,EAAA;IACA;EACA;;EACAC,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAhB,KAAA,CAAAgB,QAAA,EAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,MAAAC,UAAA;YACAN,EAAA,EAAAO,QAAA,MAAAtB,QAAA,CAAAe,EAAA;YAAA;YACAQ,YAAA,OAAAvB,QAAA,CAAAK;UACA;UACAb,KAAA,CAAAgC,GAAA,6DAAAH,UAAA;YACAI,OAAA;cACA;YACA;UACA,GACAC,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAlC,IAAA,CAAAmC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA,KAAAD,QAAA,CAAAE,KAAA,aAAAJ,GAAA,CAAAlC,IAAA,CAAAuC,OAAA;YACA;UACA,GACAC,KAAA,CAAAF,KAAA;YACAG,OAAA,CAAAH,KAAA,CAAAA,KAAA;YACA,KAAAF,QAAA,CAAAE,KAAA;UACA;QACA;UACAG,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACAC,UAAAlB,QAAA;MACA,KAAAhB,KAAA,CAAAgB,QAAA,EAAAmB,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}